datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model contractor {
  contractor_id        String        @id @default(uuid()) @db.Char(36)
  first_name           String
  middle_name          String?
  last_name            String
  date_of_birth        DateTime
  email_address        String
  phone_number         String
  nationality          String
  address              String
  country_of_residence String
  bank_details         bank_detail[]
  visa_details         visa_detail[]
  contracts            contract[]
  submissions          submission[]
}

model bank_detail {
  bank_detail_id   String           @id @default(uuid()) @db.Char(36)
  contractor_id    String           @db.Char(36)
  contractor       contractor       @relation(fields: [contractor_id], references: [contractor_id])
  bank_name        String
  account_number   String
  IBAN             String
  SWIFT            String
  currency         String
  bank_detail_type bank_detail_type
  bank_detail_validated Boolean?
  last_updated      DateTime

  @@unique([contractor_id, IBAN, SWIFT])
}

model visa_detail {
  visa_detail_id         String            @id @default(uuid()) @db.Char(36)
  contractor_id          String            @db.Char(36)
  contractor             contractor        @relation(fields: [contractor_id], references: [contractor_id])
  visa_number            String
  visa_type              String
  visa_country           String
  visa_expiry_date       DateTime
  visa_status            visa_status
  visa_sponsor           String
  country_id_number      String
  country_id_type        country_id_type
  country_id_expiry_date DateTime
  country_id_status      country_id_status

  @@unique([contractor_id, visa_number, visa_country])
}

model client_company {
  client_company_id           String     @id @default(uuid()) @db.Char(36)
  client_name                 String
  contact_email               String     @unique
  contracts                   contract[]
  invoice_submission_deadline String?
}

model contract {
  contract_id             String          @id @default(uuid()) @db.Char(36)
  contractor_id           String          @db.Char(36)
  client_company_id       String          @db.Char(36)
  project_id              String          @db.Char(36)
  PO_id                   String          @db.Char(36)
  contract_start_date     DateTime
  contract_end_date       DateTime
  job_title               String
  job_type                String
  job_number              String
  kintec_cost_centre_code String
  description_of_services String
  contract_status         contract_status
  contractor              contractor      @relation(fields: [contractor_id], references: [contractor_id])
  client_company          client_company  @relation(fields: [client_company_id], references: [client_company_id])
  project                 project         @relation(fields: [project_id], references: [project_id])
  purchase_order          purchase_order?
  calloff_work_orders     calloff_work_order[]
}

model purchase_order {
  PO_id                       String       @id @default(uuid()) @db.Char(36)
  PO_start_date               DateTime
  PO_end_date                 DateTime
  contract_id                 String       @unique @db.Char(36)
  contract                    contract     @relation(fields: [contract_id], references: [contract_id])
  PO_total_value              Decimal
  PO_status                   PO_status
  kintec_email_for_remittance String
  rates                       rate[]
  invoices                    invoice[]
  RPO_rules                   RPO_rule[]
  expenses                    expense[]
  submissions                 submission[]
}

model calloff_work_order {
  CWO_id                       String       @id @default(uuid()) @db.Char(36)
  CWO_start_date               DateTime
  CWO_end_date                 DateTime
  contract_id                 String
  contract                    contract     @relation(fields: [contract_id], references: [contract_id])
  CWO_total_value              Decimal
  CWO_status                   PO_status
  kintec_email_for_remittance String
  rates                       rate[]
  invoices                    invoice[]
  CWO_rules                   CWO_rule[]
  expenses                    expense[]
  submissions                 submission[]
}

model CWO_rule {
  CWO_rule_id            String         @id @default(uuid()) @db.Char(36)
  CWO_id                 String         @db.Char(36)
  calloff_work_order     calloff_work_order @relation(fields: [CWO_id], references: [CWO_id])
  CWO_number_format      String?
  final_invoice_label    String?
  CWO_extension_handling String?
  mob_demob_fee_rules    String?
}


model project {
  project_id    String         @id @default(uuid()) @db.Char(36)
  project_name  String
  project_type  String
  contracts     contract[]
  project_rules project_rule[]
}

model project_rule {
  project_rule_id             String                     @id @default(uuid()) @db.Char(36)
  project_id                  String                     @db.Char(36)
  project                     project                    @relation(fields: [project_id], references: [project_id])
  special_project_rules       String?
  project_rules_reviewer_name String?
  additional_review_process   additional_review_process?
  major_project_indicator     Boolean?
}

model RPO_rule {
  RPO_rule_id            String         @id @default(uuid()) @db.Char(36)
  PO_id                  String         @db.Char(36)
  purchase_order         purchase_order @relation(fields: [PO_id], references: [PO_id])
  RPO_number_format      String?
  final_invoice_label    String?
  RPO_extension_handling String?
  mob_demob_fee_rules    String?
}

model rate {
  rate_id        String         @id @default(uuid()) @db.Char(36)
  PO_id          String?        @db.Char(36)  // Nullable
  purchase_order purchase_order? @relation(fields: [PO_id], references: [PO_id])
  CWO_id         String?        @db.Char(36)  // Nullable
  calloff_work_order calloff_work_order? @relation(fields: [CWO_id], references: [CWO_id])
  rate_type      rate_type
  rate_frequency rate_frequency
  rate_value     Decimal
  rate_currency  String

}

model expense {
  expense_id        String                    @id @default(uuid()) @db.Char(36)
  PO_id             String?                    @db.Char(36)
  purchase_order    purchase_order?            @relation(fields: [PO_id], references: [PO_id])
  CWO_id             String?                    @db.Char(36)
  calloff_work_order calloff_work_order?            @relation(fields: [CWO_id], references: [CWO_id])
  expense_type      expense_type
  expense_frequency expense_frequency
  expense_value     Decimal
  expsense_currency String
  validation_rules  expense_validation_rule[]
  pro_rata_percentage Float

}

model expense_validation_rule {
  exp_val_rule_id               String  @id @default(uuid()) @db.Char(36)
  expense_id                    String  @db.Char(36)
  expense                       expense @relation(fields: [expense_id], references: [expense_id])
  allowable_expense_types       String?
  expense_documentation         String?
  supporting_documentation_type String?
  expense_limit                 String?
  reimbursement_rule            String?
}

model common_rejection {
  common_rejection_id   String                @id @default(uuid()) @db.Char(36)
  common_rejection_type common_rejection_type
  resolution_process    String
}

model submission {
  submission_id    String                       @id @default(uuid()) @db.Char(36)
  contractor_id    String                       @db.Char(36)
  contractor       contractor                   @relation(fields: [contractor_id], references: [contractor_id])
  PO_id            String?                       @db.Char(36)
  purchase_order   purchase_order?               @relation(fields: [PO_id], references: [PO_id])
  CWO_id             String?                    @db.Char(36)
  calloff_work_order calloff_work_order?            @relation(fields: [CWO_id], references: [CWO_id])
  billing_period   DateTime
  payment_currency String
  invoice_currency String
  invoice_due_date DateTime
  validation_rules submission_validation_rule[]
  reviews          review[]
  wht_rate         Float?
  wht_applicable   Boolean?
  external_assignment Boolean?

}

model submission_validation_rule {
  sub_val_rule_id          String           @id @default(uuid()) @db.Char(36)
  submission_id            String           @db.Char(36)
  submission               submission       @relation(fields: [submission_id], references: [submission_id])
  approval_signature_rules String?
  approval_date_rules      String?
  required_fields          required_fields?
  template_requirements    String?
  workday_definitions      String?
}

model review {
  review_id                    String                    @id @default(uuid()) @db.Char(36)
  submission_id                String                    @db.Char(36)
  submission                   submission                @relation(fields: [submission_id], references: [submission_id])
  special_review_required      Boolean
  reviewer_name                String
  review_status                review_status
  review_timestamp             DateTime
  review_rejection_reason      String?
  overall_validation_status    overall_validation_status
  last_overall_validation_date DateTime
  updated_by                   String
  notes                        String?
}

model invoice {
  invoice_id          String                    @id @default(uuid()) @db.Char(36)
  PO_id               String?                    @db.Char(36)
  purchase_order      purchase_order?            @relation(fields: [PO_id], references: [PO_id])
  CWO_id              String?                    @db.Char(36)
  calloff_work_order  calloff_work_order?            @relation(fields: [CWO_id], references: [CWO_id])
  billing_period      DateTime
  invoice_status      invoice_status
  invoice_type        invoice_type
  invoice_total_value Decimal
  invoice_currency    String
  formatting_rules    invoice_formatting_rule[]
  wht_rate         Float?
  wht_applicable   Boolean?
  external_assignment   Boolean?

}

model invoice_formatting_rule {
  inv_formatting_rule_id  String  @id @default(uuid()) @db.Char(36)
  invoice_id              String  @db.Char(36)
  invoice                 invoice @relation(fields: [invoice_id], references: [invoice_id])
  file_format             String?
  required_invoice_fields String?
  attachment_requirements String?
}

enum contract_status {
  active
  terminated
  expired
}

enum PO_status {
  active
  cancelled
  expired
}

enum invoice_status {
  pending
  paid
}

enum invoice_type {
  proforma
  sales
}

enum rate_type {
  charged
  paid
}

enum expense_type {
  charged
  paid
}

enum rate_frequency {
  hourly
  monthly
  daily
}

enum expense_frequency {
  hourly
  monthly
  daily
}

enum visa_status {
  active
  revoked
  expired
}

enum country_id_type {
  national_id
  passport
  other
}

enum bank_detail_type {
  primary
  secondary
}

enum country_id_status {
  active
  revoked
  expired
}

enum additional_review_process {
  required
  not_required
}

enum common_rejection_type {
  contractor
  client
}

enum required_fields {
  REG
  EXP
}

enum review_status {
  pending
  approved
  rejected
}

enum overall_validation_status {
  approved
  rejected
}
